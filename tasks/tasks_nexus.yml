---

  - name: Nexus | Test if nexus installed
    shell: test -x /usr/local/bin/nexus
    ignore_errors: true
    register: nexus_exists
    tags:
      - nexus

  - name: Nexus | Create Nexus group
    group: name="{{nexus_user}}" state="present"
    become: yes
    tags:
      - nexus

  - name: Nexus | Create Nexus user
    user: name="{{nexus_user}}" group="{{nexus_user}}"  comment="Sonatype Nexus user" home="{{ nexus_base_install_dir }}" shell="/bin/bash" createhome="yes"
    become: yes
    tags:
      - nexus

  - name: Nexus | Download Nexus distribution
    get_url:
      url: '{{nexus_distribution_url}}/nexus-{{ nexus_version }}-unix.tar.gz'
      dest: '/tmp/nexus-{{ nexus_version }}-unix.tar.gz'
      sha256sum: '{{ nexus_sha256sum | default(omit) }}'
      force: no
      validate_certs: no
    become: yes
    become_user: "{{nexus_user}}"
    when: nexus_exists | failed
    tags:
      - nexus

  - name: Nexus | Unpack distribution
    unarchive:
      src: "/tmp/nexus-{{ nexus_version }}-unix.tar.gz"
      dest: "{{ nexus_base_install_dir }}"
      remote_src: "yes"
      owner: "{{nexus_user}}"
      creates: "{{ nexus_base_install_dir }}/nexus-{{ nexus_version }}"
    when: nexus_exists | failed
    become: yes
    become_user: "{{nexus_user}}"
    tags:
      - nexus

  - name: Nexus | Link version
    file:
      src: "{{ nexus_base_install_dir }}/nexus-{{ nexus_version }}"
      dest: "{{ nexus_base_install_dir }}/nexus"
      state: link
      owner: nexus
      group: root
    become: yes
    tags:
      - nexus

  - block:

    - name: Nexus | Template SystemD script
      template: src="{{role_dir}}/templates/init/nexus.service.j2" dest="/etc/systemd/system/nexus.service"
      become: yes
      tags:
        - nexus

    when: upstart_system == "systemd"

  - block:

      - name: Nexus | Template init.d script
        template: src="{{role_dir}}/templates/init/nexus.init.j2" dest="/etc/init.d/nexus" mode="u=rwx,g=rx,o=rx"
        become: yes
        tags:
          - nexus

      - name: Nexus | Populate rc.d
        shell: update-rc.d nexus defaults
        when: ansible_os_family == "debian"
        become: yes
        tags:
          - nexus

      - name: Nexus | Populate rc.d
        shell: /sbin/chkconfig --add nexus
        when: ansible_os_family == "redhat"
        become: yes
        tags:
          - nexus

    when: upstart_system == "upstart"

  - name: Nexus | Patch nexus.rc settings {{ nexus_base_install_dir }}/nexus/bin/nexus.rc
    lineinfile: dest="{{ nexus_base_install_dir }}/nexus/bin/nexus.rc"  regexp="{{item.regexp}}" line="{{item.line}}" insertafter="{{item.insertafter | default('EOF')}}"
    with_items: "{{nexus_rc_properties | default([])}}"
    become: yes
    tags:
     - nexus

  - name: Nexus | Patch nexus.vmoptions settings {{ nexus_base_install_dir }}/nexus/bin/nexus.vmoptions
    lineinfile: dest="{{ nexus_base_install_dir }}/nexus/bin/nexus.vmoptions"  regexp="{{item.regexp}}" line="{{item.line}}" insertafter="{{item.insertafter | default('EOF')}}"
    with_items: "{{nexus_vm_options_properties | default([])}}"
    become: yes
    tags:
     - nexus

  - name: Nexus | Patch nexus-default.properties settings {{ nexus_base_install_dir }}/nexus/etc/nexus-default.properties
    lineinfile: dest="{{ nexus_base_install_dir }}/nexus/etc/nexus-default.properties"  regexp="{{item.regexp}}" line="{{item.line}}" insertafter="{{item.insertafter | default('EOF')}}"
    with_items: "{{nexus_vm_options_properties | default([])}}"
    become: yes
    tags:
     - nexus

  - name: Nexus | Enable and start service
    service: name="nexus" state="restarted" enabled="yes"
    when: docker_test is not defined
    become: yes
    tags:
     - nexus
